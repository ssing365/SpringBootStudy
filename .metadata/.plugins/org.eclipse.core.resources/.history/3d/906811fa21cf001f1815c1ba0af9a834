package com.edu.springboot;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import jakarta.servlet.http.HttpServletRequest;

/**
 * JSP에서는 컨트롤러로 정의하기 위해 Servlet 클래스를 정의한 후 매핑정보를 입력했다.
 * SpringBoot에서는 아래와 같이 @Controller 어노테이션을 부착하면
 * 자동으로 컨트롤러 클래스로 정의된다.
 * 또한 사용을 위해 별도로 인스턴스를 생성할 필요 없이
 * 스프링 컨테이너가 시작시 자동으로 인스턴스(자바빈)를 생성해준다.
 */

@Controller
public class MainController {
	/*
	 * 요청명에 대한 매핑 처리.
	 * 프로젝트를 처음 실행했을 때 home화면에 대한 view처리를 하고있다. 
	 */ 
	@RequestMapping("/")
	public String home() {
		return "home";
	}
	
	/*
	 * 컨트롤러에 매핑된 각 메서드에서
	 * String을 반환하면 application.properties의 JSP설정에의해
	 * View의 경로가 조립된다.
	 * "Prefix경로 + 메서드 반환값 + suffix경로"에 해당하는 
	 * JSP파일을 찾아 포워드한다.
	 * 즉 이 함수는 index.jsp파일을 찾아 포워드한다. 
	 */
	@RequestMapping("/index.do")
	public String index() {
		return "index";
	}
	
	@RequestMapping("/sub/sub.do")
	public String sub() {
		return "sub/sub";
	}
	
	/*
	 * 1. request 내장객체를 통해 폼값 받기
	 * : JSP에서 사용하던 방식으로 request내장객체를 통해 폼값을 받는다.
	 * 내장객체 사용을 위해 이 함수의 매개변수로 선언한 후 getParameter()
	 * 메서드를 호출하면 된다.
	 * */
	
	@RequestMapping("/form1.do")
	public String form1(HttpServletRequest httpServletRequest,
			Model model) {
		// 폼값 받아 변수 저장
		String name = httpServletRequest.getParameter("name");
		String age = httpServletRequest.getParameter("age");
		/*
		 * View로 전달한 데이터가 있는 경우 서블릿에서는
		 * request영역에 저장한 후 포워드했다.
		 * SpringBoot에서는 Model객체에 저장한 후 
		 * 포워드 대신 View의 경로를 반환한다.
		 * */
		model.addAttribute("name", name);
		model.addAttribute("age", age);
		
		return "form/submit1";
	}
	
	@RequestMapping("/form2.do")
	public String form2(@RequestParam("name") String name,
			@RequestParam("age") String age, Model model) {
		
		model.addAttribute("name", name);
		model.addAttribute("age", age);
		
		return "form/submit2";
	}
	
	@RequestMapping("/form3.do")
	public String form3(PersonDTO personDTO) {
		return "form/submit3";
	}
	
	@RequestMapping("/form4/{name}/{age}")
	public String form4(@PathVariable String name,
			@PathVariable String age, Model model) {
		model.addAttribute("name",name);
		model.addAttribute("age",age);
		
		return "form/submit4";
	}
}